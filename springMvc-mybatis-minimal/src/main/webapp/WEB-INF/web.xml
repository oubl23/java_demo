<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" version="3.0">

  <!-- ================站台名称，站台描述，大小图标================ -->
  <display-name>SpringMVC</display-name>
  <icon>
    <small-icon>/common/images/favicon.ico</small-icon>
    <large-icon>/common/images/favicon.ico</large-icon>
  </icon>

  <!-- 支持分布式 -->
  <!-- <distributable/> -->

  <!-- 应用路径，如果不设置，缺省为"webapp.root"，当tomcat加载多个项目时，会发生名称冲突 -->
  <context-param>
    <param-name>webAppRootKey</param-name>
    <param-value>spring4.root</param-value>
  </context-param>

  <!-- ================log4j配置开始================ -->
  <!-- log4j2不需要在这边做额外的配置 -->
  <!-- ================log4j配置结束================ -->

  <!-- ================Spring配置开始================ -->
  <!-- 设置Spring容器加载所有的配置文件的路径 -->
  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>classpath*:spring-config.xml</param-value>
    <!-- <param-value>classpath:/spring-*.xml</param-value> -->
  </context-param>
  <!-- 配置Spring监听器，可以在容器启动时，加载contextConfigLocation的context-param节点的配置文件 -->
  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>
  <!-- ================Spring配置结束================ -->


  <!-- 配置监听器，定义在服务器启动和关闭时，需要执行的方法 -->
  <!--<listener>-->
    <!--<listener-class>com.demo.common.startup.InitListener</listener-class>-->
  <!--</listener>-->

  <!-- 防止Struts和Quartz等内存溢出监听器 -->
  <listener>
    <listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
  </listener>

  <!-- 监听HTTP请求事件，为Bean的request,session,globalsession等作用域提供支持 -->
  <listener>
    <listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
  </listener>

  <!-- Spring 字符编码配置 -->
  <filter>
    <filter-name>characterEncodingFilter</filter-name>
    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
    <init-param>
      <param-name>encoding</param-name>
      <param-value>UTF-8</param-value>
    </init-param>
    <init-param>
      <param-name>forceEncoding</param-name>
      <param-value>true</param-value>
    </init-param>
  </filter>
  <filter-mapping>
    <filter-name>characterEncodingFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>

  <!-- 自定义登录过滤器，拦截JSP页面，不允许直接访问 -->
  <!--<filter>-->
    <!--<filter-name>loginFilter</filter-name>-->
    <!--<filter-class>com.demo.common.filter.LoginFilterSpring</filter-class>-->
    <!--<init-param>-->
      <!--<param-name>charset</param-name>-->
      <!--<param-value>UTF-8</param-value>-->
    <!--</init-param>-->
    <!--<init-param>-->
      <!--<param-name>contentType</param-name>-->
      <!--<param-value>text/html;charset=UTF-8</param-value>-->
    <!--</init-param>-->
  <!--</filter>-->
  <!--<filter-mapping>-->
    <!--<filter-name>loginFilter</filter-name>-->
    <!--<url-pattern>*.jsp</url-pattern>-->
  <!--</filter-mapping>-->

  <!--包装request过滤器-->
  <!--<filter>-->
    <!--<filter-name>wrapRequestFilter</filter-name>-->
    <!--<filter-class>com.demo.common.filter.WrapParameterFilter</filter-class>-->
  <!--</filter>-->
  <!--<filter-mapping>-->
    <!--<filter-name>wrapRequestFilter</filter-name>-->
    <!--<url-pattern>/*</url-pattern>-->
  <!--</filter-mapping>-->

  <!-- 激活Tomcat的defaultServlet来处理静态文件（效率较高） -->
  <servlet-mapping>
    <servlet-name>default</servlet-name>
    <url-pattern>*.jpg</url-pattern>
    <url-pattern>*.gif</url-pattern>
    <url-pattern>*.png</url-pattern>
    <url-pattern>*.js</url-pattern>
    <url-pattern>*.css</url-pattern>
    <url-pattern>*.ico</url-pattern>
    <url-pattern>*.eot</url-pattern>
    <url-pattern>*.svg</url-pattern>
    <url-pattern>*.ttf</url-pattern>
    <url-pattern>*.woff</url-pattern>
    <url-pattern>*.mp3</url-pattern>
    <url-pattern>*.html</url-pattern>
  </servlet-mapping>

  <!-- ================配置SpringMVC核心调度器================ -->
  <!-- 不指定具体文件的话，默认为"/WEB-INF/<servlet name>-servlet.xml" -->
  <!-- load-on-startup代表启动顺序，设置为大于等于0表示容器在应用启动时就加载并初始化这个servlet -->
  <!-- 推荐拦截/，风格优雅 -->
  <servlet>
    <servlet-name>SpringMVC</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <init-param>
      <param-name>contextConfigLocation</param-name>
      <param-value>classpath*:mvc-config.xml</param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>SpringMVC</servlet-name>
    <url-pattern>/</url-pattern>
  </servlet-mapping>

  <!-- 随服务器启动的servlet -->
  <!--<servlet>-->
    <!--<servlet-name>initServlet</servlet-name>-->
    <!--<servlet-class>com.demo.common.startup.InitServlet</servlet-class>-->
    <!--<load-on-startup>0</load-on-startup>-->
  <!--</servlet>-->

  <!-- 阿里巴巴数据源配置启用Web监控统计功能 -->
  <!-- 通过 http://ip:port/druid/ 地址访问即可 -->
  <servlet>
    <servlet-name>DruidStatView</servlet-name>
    <servlet-class>com.alibaba.druid.support.http.StatViewServlet</servlet-class>
    <init-param>
      <param-name>allow</param-name>
      <param-value>127.0.0.1</param-value>
    </init-param>
  </servlet>
  <servlet-mapping>
    <servlet-name>DruidStatView</servlet-name>
    <url-pattern>/druid/*</url-pattern>
  </servlet-mapping>

  <!-- CXF服务发布配置 -->
  <!--<servlet>-->
    <!--<servlet-name>CXFService</servlet-name>-->
    <!--<servlet-class>org.apache.cxf.transport.servlet.CXFServlet</servlet-class>-->
    <!--<load-on-startup>1</load-on-startup>-->
  <!--</servlet>-->
  <!--<servlet-mapping>-->
    <!--<servlet-name>CXFService</servlet-name>-->
    <!--<url-pattern>/webservice/*</url-pattern>-->
  <!--</servlet-mapping>-->

  <!-- 设置session过期时间为60分钟 -->
  <session-config>
    <session-timeout>60</session-timeout>
  </session-config>

  <!-- 指定错误404和500的处理页面 -->
  <error-page>
    <error-code>404</error-code>
    <location>/common/view/404.jsp</location>
  </error-page>
  <error-page>
    <error-code>500</error-code>
    <location>/common/view/500.jsp</location>
  </error-page>

  <!-- 欢迎页面 -->
  <welcome-file-list>
    <welcome-file>common/view/index.jsp</welcome-file>
  </welcome-file-list>

</web-app>
